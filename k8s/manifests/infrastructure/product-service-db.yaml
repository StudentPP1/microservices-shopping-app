apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: product-service-db
  name: product-service-db
spec:
  replicas: 1 # one copy of app
  selector:
    matchLabels:
      app: product-service-db
  template:
    metadata:
      labels:
        app: product-service-db
    spec:
      containers:
        - image: mongo:7.0.5
          name: mongo
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: mongo_initdb_root_username
                  name: product-service-db-secrets
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongo_initdb_root_password
                  name: product-service-db-secrets
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: mongo_initdb_root_database
                  name: product-service-db-secrets
          volumeMounts: # all data generated by this container must be
            - mountPath: /data/db # in path at k8s server
              name: product-service-db-data
#            - mountPath: /docker-entrypoint-inidb.d => mount init script
#              name: product-service-db-init-config
      volumes:
        - name: product-service-db-data # the same name in volumeMounts
          persistentVolumeClaim: # copy data to local machine
            claimName: product-service-db-pvc
#        - name: product-service-db-init-config # create volume for config map
#          configMap: # copy from mountPath to start service
#            name: product-service-db-init-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: product-service-db
  name: product-service-db
spec:
  ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
  selector:
    app: product-service-db
  type: ClusterIP  # allow connection only from other pods in cluster
---
apiVersion: v1
data:
  mongo_initdb_root_database: cHJvZHVjdC1zZXJ2aWNl
  mongo_initdb_root_password: cGFzc3dvcmQ=
  mongo_initdb_root_username: cm9vdA==
kind: Secret
metadata:
  name: product-service-db-secrets
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: product-service-db-pv # persistence volume
spec:
  storageClassName: 'standard'
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath: # local data path
    path: /product-service-db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: product-service-db-pvc # persistence volume claim
spec:
  storageClassName: 'standard'
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# config map to load init data from .sql file if it would be mysql
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: product-service-db-init-config
#data:
#  initdb.sql: |
#    CREATE DATABASE IF NOT EXISTS order-service;